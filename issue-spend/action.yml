name: "Issue spend time"
description: "Issue spend time"
inputs:
  token:
    description: 'Password to the project'
    required: true

runs:
  using: "composite"
  steps:
    - name: Find comments
      id: findcomments
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'find-comments'
        token: ${{ inputs.token }}
        body-include: '!spend'

    - name: Update comment
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'update-comment'
        token: ${{ inputs.token }}
        comment-id: ${{ github.event.comment.id }}
        emoji: 'eyes'

    - name: Check body
      id: isbodyok
      uses: actions/github-script@v6
      env:
        COMMENTS: ${{ steps.findcomments.outputs.comments }}
        COMMENT_ID: ${{ github.event.comment.id }}
      with:
        script: |
          const { COMMENTS, COMMENT_ID } = process.env
          const regex = /!spend (\d+)( |)(d|h|m)/i;
          const comments = JSON.parse(process.env.COMMENTS)
          const comment = comments.find(com => process.env.COMMENT_ID == com.id)
          return regex.exec(comment.body) != null
    - name: Calculate time
      uses: actions/github-script@v6
      id: calculate-time
      env:
        COMMENTS: ${{ steps.findcomments.outputs.comments }}
      with:
        script: |
          const regex = /!spend (\d+)( |)(d|h)/i;
          const comments = JSON.parse(process.env.COMMENTS)
          return comments.map(comment => {
            const result = regex.exec(comment.body)
              if(result !== null){
                switch(result[3]){
                  case "d": return result[1]*7
                  case "h": return result[1]*1
                  default : return 0
              }
            } return 0
          }).reduce((value, total) => value + total, 0 )
    - name: Write body
      uses: actions/github-script@v6
      id: write-body
      env:
        BODY: ${{ github.event.issue.body }}
        TIME: ${{steps.calculate-time.outputs.result}}
      with:
        script: |
          let result = ''
          const BODY = process.env.BODY
          const regex = /<!--\s?metadata\s?:\s?{.*}\s?-->/is
          const regexSpend = /^>\s\[SPEND\]\s.*$/im
          console.log('BODY', BODY)
          if (regex.exec(BODY) !== null) {
            result += BODY.replace(regex, `<!-- metadata : { "timespend": ${process.env.TIME} } -->`)
          } else {
            result += BODY + `\n<!-- metadata : { "timespend": ${process.env.TIME} } -->`
          }
          if (regexSpend.exec(BODY) !== null) {
            result = result.replace(regexSpend, `> [SPEND] Voici le temps passé sur cette issue pour le moment : ${process.env.TIME}h`)
          } else {
            result += `\n> [SPEND] Voici le temps passé sur cette issue pour le moment : ${process.env.TIME}h`
          }
          console.log('result', result)
          return result
    - name: Update comment
      uses: actions-cool/issues-helper@v3
      if: ${{steps.isbodyok.outputs.result}}
      with:
        actions: 'update-comment'
        token: ${{ inputs.token }}
        comment-id: ${{ github.event.comment.id }}
        emoji: '+1'

    - name: Update issue
      uses: actions-cool/issues-helper@v3
      with:
        actions: 'update-issue'
        token: ${{ inputs.token }}
        issue-number: ${{ env.ISSUE_NUMBER }}
        body: ${{ github.event.issue.body }}
        update-mode: 'replace'